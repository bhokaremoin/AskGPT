"Hello everyone, in this video you will learn about regression testing. Quality testing plays an important role in software development and when we talk about quality testing, then regression definitely comes into the picture. In this video, you will learn what is regression testing, why we do regression testing, when we do regression testing and how we do regression testing. We will understand regression testing with ServiceNow which is a cloud software platform. Let's understand this with a practical example. In your company, lot of employees and users use ServiceNow which is a cloud software platform. You have a development team who works on enhancements of ServiceNow platform and add new features. As per standard release and deployment process, requirement goes from development, then QA testing, UAT testing and production deployment. Initially platform is on a base version which has out of the box features. However, when you follow the release cycle, then new version is added in every release with new features. Let's say the current version is v3 after few production deployments which means ServiceNow production system now has all the features in this v3 version which are also implemented in v1, v2 and v3 including base version as well. Now one day, one of the user of ServiceNow reported that he is not able to create a change record from incident form which is a feature available in incident management of ServiceNow. He also mentioned that he was able to create the change before last release of ServiceNow. Technical teams started the investigation. Teams started validating if there was a requirement to change this functionality in last release and they found that there was no requirement to change this existing feature in last release. However, a developer broke this existing feature while working on some other unrelated requirement which was part of last release. Testing team also validated that testing was performed in last release but still exist functionality got broken. Now the question is did testing team perform testing of previous changes done before last release and the answer was no. And this is the reason due to which broken functionality was not caught during testing of the release. So basically it is recommended to test existing functionalities before new production release to make sure existing functionality is not broken and this is called regression testing. So regression testing is a type of software testing to perform checks for existing features if they are working as expected after recent development changes. It is re-execution of existing test cases created for existing features to ensure existing functionalities are working fine. It gives confidence to developers, testers, stakeholders that there is no existing functionality broken after production change. Now why we do regression testing? Often times other part of the system can behave unexpectedly due to new modifications which means features which used to work got some bugs. So testing team needs to make sure that system in new state is working properly with all existing features and that is why regression comes into the picture. Regression ensures that new development is not interrupting existing working features. We need to do regression to make sure that there are no defects or bugs after implementing new development changes. We do regression to allow retesting of the platform or system after development changes. Now when do we do regression testing? We do regression testing when there is any development change or code change in the platform which could be a new feature, enhancement or bug fix. Regression testing is performed after completion of all changes planned for a particular release. Let's understand this with an example. You have a ServiceNow system with out of the box baseline features which are working features. Testing team creates test cases for different scenarios for existing functionalities and features. Let's say there is a new requirement from a customer to make a field mandatory on incident form in ServiceNow platform. Regression team will follow a release path in which requirement will be developed. Then it will go for QA testing. And then testing team will perform regression testing to make sure the new requirement has not broken any other feature of the platform. After regression, UAT testing is done for that particular new requirement, that new feature and then code or development is moved to production. That means that feature is basically moved to production. Now this ensures that all features are working fine in production with new feature and gives confidence to all the parties involved in the release. Involvement of regression may vary in different organizations as some organizations perform regression during UAT and some perform before UAT. So it totally depends on the process of different organizations. Now how do we do regression testing? After multiple releases of a platform or software system, regression testing becomes time consuming. So it's really important to follow a right approach of regression testing. Regression testing can be done manually or automatically. However if you have 1000 plus test cases, then you should definitely have automated test cases so that regression result can be seen quickly. In regression testing, you should test all existing features. However depending on the heaviness of the platform or software, you should also prioritize testing of major business functionalities. You should also categorize the test cases on the basis of scenarios and features so that critical categorized test cases can be tested on priority. I hope now you will have an idea of regression testing and how you can involve in your development cycle. Thank you for watching this video. Have a great day!"